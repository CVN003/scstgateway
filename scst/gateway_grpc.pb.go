// protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative --doc_out=../doc --doc_opt=html,index.html gateway.proto

// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v5.28.3
// source: gateway.proto

package scst

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	SCSTGateway_AddSVD_FullMethodName        = "/scst.SCSTGateway/AddSVD"
	SCSTGateway_RemoveSVD_FullMethodName     = "/scst.SCSTGateway/RemoveSVD"
	SCSTGateway_AddGroup_FullMethodName      = "/scst.SCSTGateway/AddGroup"
	SCSTGateway_AddLun2Group_FullMethodName  = "/scst.SCSTGateway/AddLun2Group"
	SCSTGateway_AddIni2Group_FullMethodName  = "/scst.SCSTGateway/AddIni2Group"
	SCSTGateway_RemIni2Group_FullMethodName  = "/scst.SCSTGateway/RemIni2Group"
	SCSTGateway_GetLiveConfig_FullMethodName = "/scst.SCSTGateway/GetLiveConfig"
	SCSTGateway_SaveConfig_FullMethodName    = "/scst.SCSTGateway/SaveConfig"
)

// SCSTGatewayClient is the client API for SCSTGateway service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SCSTGatewayClient interface {
	AddSVD(ctx context.Context, in *AddSVDReq, opts ...grpc.CallOption) (*SCSTResp, error)
	RemoveSVD(ctx context.Context, in *RemoveSVDReq, opts ...grpc.CallOption) (*SCSTResp, error)
	AddGroup(ctx context.Context, in *AddGroupReq, opts ...grpc.CallOption) (*SCSTResp, error)
	AddLun2Group(ctx context.Context, in *AddLun2GroupReq, opts ...grpc.CallOption) (*SCSTResp, error)
	AddIni2Group(ctx context.Context, in *AddIni2GroupReq, opts ...grpc.CallOption) (*SCSTResp, error)
	RemIni2Group(ctx context.Context, in *RemIni2GroupReq, opts ...grpc.CallOption) (*SCSTResp, error)
	GetLiveConfig(ctx context.Context, in *GetLiveConfigReq, opts ...grpc.CallOption) (*SCSTResp, error)
	SaveConfig(ctx context.Context, in *SaveConfigReq, opts ...grpc.CallOption) (*SCSTResp, error)
}

type sCSTGatewayClient struct {
	cc grpc.ClientConnInterface
}

func NewSCSTGatewayClient(cc grpc.ClientConnInterface) SCSTGatewayClient {
	return &sCSTGatewayClient{cc}
}

func (c *sCSTGatewayClient) AddSVD(ctx context.Context, in *AddSVDReq, opts ...grpc.CallOption) (*SCSTResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SCSTResp)
	err := c.cc.Invoke(ctx, SCSTGateway_AddSVD_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sCSTGatewayClient) RemoveSVD(ctx context.Context, in *RemoveSVDReq, opts ...grpc.CallOption) (*SCSTResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SCSTResp)
	err := c.cc.Invoke(ctx, SCSTGateway_RemoveSVD_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sCSTGatewayClient) AddGroup(ctx context.Context, in *AddGroupReq, opts ...grpc.CallOption) (*SCSTResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SCSTResp)
	err := c.cc.Invoke(ctx, SCSTGateway_AddGroup_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sCSTGatewayClient) AddLun2Group(ctx context.Context, in *AddLun2GroupReq, opts ...grpc.CallOption) (*SCSTResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SCSTResp)
	err := c.cc.Invoke(ctx, SCSTGateway_AddLun2Group_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sCSTGatewayClient) AddIni2Group(ctx context.Context, in *AddIni2GroupReq, opts ...grpc.CallOption) (*SCSTResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SCSTResp)
	err := c.cc.Invoke(ctx, SCSTGateway_AddIni2Group_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sCSTGatewayClient) RemIni2Group(ctx context.Context, in *RemIni2GroupReq, opts ...grpc.CallOption) (*SCSTResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SCSTResp)
	err := c.cc.Invoke(ctx, SCSTGateway_RemIni2Group_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sCSTGatewayClient) GetLiveConfig(ctx context.Context, in *GetLiveConfigReq, opts ...grpc.CallOption) (*SCSTResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SCSTResp)
	err := c.cc.Invoke(ctx, SCSTGateway_GetLiveConfig_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sCSTGatewayClient) SaveConfig(ctx context.Context, in *SaveConfigReq, opts ...grpc.CallOption) (*SCSTResp, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SCSTResp)
	err := c.cc.Invoke(ctx, SCSTGateway_SaveConfig_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SCSTGatewayServer is the server API for SCSTGateway service.
// All implementations must embed UnimplementedSCSTGatewayServer
// for forward compatibility.
type SCSTGatewayServer interface {
	AddSVD(context.Context, *AddSVDReq) (*SCSTResp, error)
	RemoveSVD(context.Context, *RemoveSVDReq) (*SCSTResp, error)
	AddGroup(context.Context, *AddGroupReq) (*SCSTResp, error)
	AddLun2Group(context.Context, *AddLun2GroupReq) (*SCSTResp, error)
	AddIni2Group(context.Context, *AddIni2GroupReq) (*SCSTResp, error)
	RemIni2Group(context.Context, *RemIni2GroupReq) (*SCSTResp, error)
	GetLiveConfig(context.Context, *GetLiveConfigReq) (*SCSTResp, error)
	SaveConfig(context.Context, *SaveConfigReq) (*SCSTResp, error)
	mustEmbedUnimplementedSCSTGatewayServer()
}

// UnimplementedSCSTGatewayServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedSCSTGatewayServer struct{}

func (UnimplementedSCSTGatewayServer) AddSVD(context.Context, *AddSVDReq) (*SCSTResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddSVD not implemented")
}
func (UnimplementedSCSTGatewayServer) RemoveSVD(context.Context, *RemoveSVDReq) (*SCSTResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveSVD not implemented")
}
func (UnimplementedSCSTGatewayServer) AddGroup(context.Context, *AddGroupReq) (*SCSTResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddGroup not implemented")
}
func (UnimplementedSCSTGatewayServer) AddLun2Group(context.Context, *AddLun2GroupReq) (*SCSTResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddLun2Group not implemented")
}
func (UnimplementedSCSTGatewayServer) AddIni2Group(context.Context, *AddIni2GroupReq) (*SCSTResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddIni2Group not implemented")
}
func (UnimplementedSCSTGatewayServer) RemIni2Group(context.Context, *RemIni2GroupReq) (*SCSTResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemIni2Group not implemented")
}
func (UnimplementedSCSTGatewayServer) GetLiveConfig(context.Context, *GetLiveConfigReq) (*SCSTResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLiveConfig not implemented")
}
func (UnimplementedSCSTGatewayServer) SaveConfig(context.Context, *SaveConfigReq) (*SCSTResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveConfig not implemented")
}
func (UnimplementedSCSTGatewayServer) mustEmbedUnimplementedSCSTGatewayServer() {}
func (UnimplementedSCSTGatewayServer) testEmbeddedByValue()                     {}

// UnsafeSCSTGatewayServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SCSTGatewayServer will
// result in compilation errors.
type UnsafeSCSTGatewayServer interface {
	mustEmbedUnimplementedSCSTGatewayServer()
}

func RegisterSCSTGatewayServer(s grpc.ServiceRegistrar, srv SCSTGatewayServer) {
	// If the following call pancis, it indicates UnimplementedSCSTGatewayServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&SCSTGateway_ServiceDesc, srv)
}

func _SCSTGateway_AddSVD_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddSVDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SCSTGatewayServer).AddSVD(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SCSTGateway_AddSVD_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SCSTGatewayServer).AddSVD(ctx, req.(*AddSVDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SCSTGateway_RemoveSVD_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveSVDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SCSTGatewayServer).RemoveSVD(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SCSTGateway_RemoveSVD_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SCSTGatewayServer).RemoveSVD(ctx, req.(*RemoveSVDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SCSTGateway_AddGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddGroupReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SCSTGatewayServer).AddGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SCSTGateway_AddGroup_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SCSTGatewayServer).AddGroup(ctx, req.(*AddGroupReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SCSTGateway_AddLun2Group_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddLun2GroupReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SCSTGatewayServer).AddLun2Group(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SCSTGateway_AddLun2Group_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SCSTGatewayServer).AddLun2Group(ctx, req.(*AddLun2GroupReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SCSTGateway_AddIni2Group_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddIni2GroupReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SCSTGatewayServer).AddIni2Group(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SCSTGateway_AddIni2Group_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SCSTGatewayServer).AddIni2Group(ctx, req.(*AddIni2GroupReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SCSTGateway_RemIni2Group_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemIni2GroupReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SCSTGatewayServer).RemIni2Group(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SCSTGateway_RemIni2Group_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SCSTGatewayServer).RemIni2Group(ctx, req.(*RemIni2GroupReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SCSTGateway_GetLiveConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLiveConfigReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SCSTGatewayServer).GetLiveConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SCSTGateway_GetLiveConfig_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SCSTGatewayServer).GetLiveConfig(ctx, req.(*GetLiveConfigReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SCSTGateway_SaveConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveConfigReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SCSTGatewayServer).SaveConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SCSTGateway_SaveConfig_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SCSTGatewayServer).SaveConfig(ctx, req.(*SaveConfigReq))
	}
	return interceptor(ctx, in, info, handler)
}

// SCSTGateway_ServiceDesc is the grpc.ServiceDesc for SCSTGateway service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SCSTGateway_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "scst.SCSTGateway",
	HandlerType: (*SCSTGatewayServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddSVD",
			Handler:    _SCSTGateway_AddSVD_Handler,
		},
		{
			MethodName: "RemoveSVD",
			Handler:    _SCSTGateway_RemoveSVD_Handler,
		},
		{
			MethodName: "AddGroup",
			Handler:    _SCSTGateway_AddGroup_Handler,
		},
		{
			MethodName: "AddLun2Group",
			Handler:    _SCSTGateway_AddLun2Group_Handler,
		},
		{
			MethodName: "AddIni2Group",
			Handler:    _SCSTGateway_AddIni2Group_Handler,
		},
		{
			MethodName: "RemIni2Group",
			Handler:    _SCSTGateway_RemIni2Group_Handler,
		},
		{
			MethodName: "GetLiveConfig",
			Handler:    _SCSTGateway_GetLiveConfig_Handler,
		},
		{
			MethodName: "SaveConfig",
			Handler:    _SCSTGateway_SaveConfig_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gateway.proto",
}
