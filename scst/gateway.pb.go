// protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative gateway.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.3
// source: gateway.proto

package scst

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddSVDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LunName           string `protobuf:"bytes,1,opt,name=LunName,proto3" json:"LunName,omitempty"`
	LunDeviceFullPath string `protobuf:"bytes,2,opt,name=LunDeviceFullPath,proto3" json:"LunDeviceFullPath,omitempty"`
	VID               string `protobuf:"bytes,3,opt,name=VID,proto3" json:"VID,omitempty"`
	PID               string `protobuf:"bytes,4,opt,name=PID,proto3" json:"PID,omitempty"`
	USN               string `protobuf:"bytes,5,opt,name=USN,proto3" json:"USN,omitempty"`
	HandlerType       string `protobuf:"bytes,6,opt,name=HandlerType,proto3" json:"HandlerType,omitempty"`
}

func (x *AddSVDReq) Reset() {
	*x = AddSVDReq{}
	mi := &file_gateway_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddSVDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSVDReq) ProtoMessage() {}

func (x *AddSVDReq) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSVDReq.ProtoReflect.Descriptor instead.
func (*AddSVDReq) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{0}
}

func (x *AddSVDReq) GetLunName() string {
	if x != nil {
		return x.LunName
	}
	return ""
}

func (x *AddSVDReq) GetLunDeviceFullPath() string {
	if x != nil {
		return x.LunDeviceFullPath
	}
	return ""
}

func (x *AddSVDReq) GetVID() string {
	if x != nil {
		return x.VID
	}
	return ""
}

func (x *AddSVDReq) GetPID() string {
	if x != nil {
		return x.PID
	}
	return ""
}

func (x *AddSVDReq) GetUSN() string {
	if x != nil {
		return x.USN
	}
	return ""
}

func (x *AddSVDReq) GetHandlerType() string {
	if x != nil {
		return x.HandlerType
	}
	return ""
}

type RemoveSVDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LunName     string `protobuf:"bytes,1,opt,name=LunName,proto3" json:"LunName,omitempty"`
	HandlerType string `protobuf:"bytes,2,opt,name=HandlerType,proto3" json:"HandlerType,omitempty"`
}

func (x *RemoveSVDReq) Reset() {
	*x = RemoveSVDReq{}
	mi := &file_gateway_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveSVDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSVDReq) ProtoMessage() {}

func (x *RemoveSVDReq) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSVDReq.ProtoReflect.Descriptor instead.
func (*RemoveSVDReq) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{1}
}

func (x *RemoveSVDReq) GetLunName() string {
	if x != nil {
		return x.LunName
	}
	return ""
}

func (x *RemoveSVDReq) GetHandlerType() string {
	if x != nil {
		return x.HandlerType
	}
	return ""
}

type AddGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetName string `protobuf:"bytes,1,opt,name=TargetName,proto3" json:"TargetName,omitempty"`
	TargetType string `protobuf:"bytes,2,opt,name=TargetType,proto3" json:"TargetType,omitempty"`
	GroupName  string `protobuf:"bytes,3,opt,name=GroupName,proto3" json:"GroupName,omitempty"`
}

func (x *AddGroupReq) Reset() {
	*x = AddGroupReq{}
	mi := &file_gateway_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGroupReq) ProtoMessage() {}

func (x *AddGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGroupReq.ProtoReflect.Descriptor instead.
func (*AddGroupReq) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{2}
}

func (x *AddGroupReq) GetTargetName() string {
	if x != nil {
		return x.TargetName
	}
	return ""
}

func (x *AddGroupReq) GetTargetType() string {
	if x != nil {
		return x.TargetType
	}
	return ""
}

func (x *AddGroupReq) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

type AddLun2GroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetName string `protobuf:"bytes,1,opt,name=TargetName,proto3" json:"TargetName,omitempty"`
	TargetType string `protobuf:"bytes,2,opt,name=TargetType,proto3" json:"TargetType,omitempty"`
	GroupName  string `protobuf:"bytes,3,opt,name=GroupName,proto3" json:"GroupName,omitempty"`
	LunName    string `protobuf:"bytes,4,opt,name=LunName,proto3" json:"LunName,omitempty"`
}

func (x *AddLun2GroupReq) Reset() {
	*x = AddLun2GroupReq{}
	mi := &file_gateway_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddLun2GroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLun2GroupReq) ProtoMessage() {}

func (x *AddLun2GroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLun2GroupReq.ProtoReflect.Descriptor instead.
func (*AddLun2GroupReq) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{3}
}

func (x *AddLun2GroupReq) GetTargetName() string {
	if x != nil {
		return x.TargetName
	}
	return ""
}

func (x *AddLun2GroupReq) GetTargetType() string {
	if x != nil {
		return x.TargetType
	}
	return ""
}

func (x *AddLun2GroupReq) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *AddLun2GroupReq) GetLunName() string {
	if x != nil {
		return x.LunName
	}
	return ""
}

type AddIni2GroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetName string `protobuf:"bytes,1,opt,name=TargetName,proto3" json:"TargetName,omitempty"`
	TargetType string `protobuf:"bytes,2,opt,name=TargetType,proto3" json:"TargetType,omitempty"`
	GroupName  string `protobuf:"bytes,3,opt,name=GroupName,proto3" json:"GroupName,omitempty"`
	Ini        string `protobuf:"bytes,4,opt,name=Ini,proto3" json:"Ini,omitempty"`
}

func (x *AddIni2GroupReq) Reset() {
	*x = AddIni2GroupReq{}
	mi := &file_gateway_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddIni2GroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddIni2GroupReq) ProtoMessage() {}

func (x *AddIni2GroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddIni2GroupReq.ProtoReflect.Descriptor instead.
func (*AddIni2GroupReq) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{4}
}

func (x *AddIni2GroupReq) GetTargetName() string {
	if x != nil {
		return x.TargetName
	}
	return ""
}

func (x *AddIni2GroupReq) GetTargetType() string {
	if x != nil {
		return x.TargetType
	}
	return ""
}

func (x *AddIni2GroupReq) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *AddIni2GroupReq) GetIni() string {
	if x != nil {
		return x.Ini
	}
	return ""
}

type RemIni2GroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetName string `protobuf:"bytes,1,opt,name=TargetName,proto3" json:"TargetName,omitempty"`
	TargetType string `protobuf:"bytes,2,opt,name=TargetType,proto3" json:"TargetType,omitempty"`
	GroupName  string `protobuf:"bytes,3,opt,name=GroupName,proto3" json:"GroupName,omitempty"`
	Ini        string `protobuf:"bytes,4,opt,name=Ini,proto3" json:"Ini,omitempty"`
}

func (x *RemIni2GroupReq) Reset() {
	*x = RemIni2GroupReq{}
	mi := &file_gateway_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemIni2GroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemIni2GroupReq) ProtoMessage() {}

func (x *RemIni2GroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemIni2GroupReq.ProtoReflect.Descriptor instead.
func (*RemIni2GroupReq) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{5}
}

func (x *RemIni2GroupReq) GetTargetName() string {
	if x != nil {
		return x.TargetName
	}
	return ""
}

func (x *RemIni2GroupReq) GetTargetType() string {
	if x != nil {
		return x.TargetType
	}
	return ""
}

func (x *RemIni2GroupReq) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *RemIni2GroupReq) GetIni() string {
	if x != nil {
		return x.Ini
	}
	return ""
}

type GetLiveConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetLiveConfigReq) Reset() {
	*x = GetLiveConfigReq{}
	mi := &file_gateway_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLiveConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiveConfigReq) ProtoMessage() {}

func (x *GetLiveConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiveConfigReq.ProtoReflect.Descriptor instead.
func (*GetLiveConfigReq) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{6}
}

type SaveConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=Version,proto3" json:"Version,omitempty"`
}

func (x *SaveConfigReq) Reset() {
	*x = SaveConfigReq{}
	mi := &file_gateway_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveConfigReq) ProtoMessage() {}

func (x *SaveConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveConfigReq.ProtoReflect.Descriptor instead.
func (*SaveConfigReq) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{7}
}

func (x *SaveConfigReq) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type SCSTResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SCSTResp) Reset() {
	*x = SCSTResp{}
	mi := &file_gateway_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SCSTResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCSTResp) ProtoMessage() {}

func (x *SCSTResp) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCSTResp.ProtoReflect.Descriptor instead.
func (*SCSTResp) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{8}
}

func (x *SCSTResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SCSTResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SCSTResp) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

var File_gateway_proto protoreflect.FileDescriptor

var file_gateway_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x04, 0x73, 0x63, 0x73, 0x74, 0x22, 0xab, 0x01, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x53, 0x56, 0x44,
	0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x4c, 0x75, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4c, 0x75, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a,
	0x11, 0x4c, 0x75, 0x6e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x46, 0x75, 0x6c, 0x6c, 0x50, 0x61,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x4c, 0x75, 0x6e, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x46, 0x75, 0x6c, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x56,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x56, 0x49, 0x44, 0x12, 0x10, 0x0a,
	0x03, 0x50, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x50, 0x49, 0x44, 0x12,
	0x10, 0x0a, 0x03, 0x55, 0x53, 0x4e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x53,
	0x4e, 0x12, 0x20, 0x0a, 0x0b, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x4a, 0x0a, 0x0c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x56, 0x44,
	0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x4c, 0x75, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4c, 0x75, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x6b, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x1e,
	0x0a, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x89, 0x01, 0x0a,
	0x0f, 0x41, 0x64, 0x64, 0x4c, 0x75, 0x6e, 0x32, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x4c, 0x75, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x4c, 0x75, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x0f, 0x41, 0x64, 0x64,
	0x49, 0x6e, 0x69, 0x32, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x6e,
	0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x49, 0x6e, 0x69, 0x22, 0x81, 0x01, 0x0a,
	0x0f, 0x52, 0x65, 0x6d, 0x49, 0x6e, 0x69, 0x32, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x49, 0x6e, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x49, 0x6e, 0x69,
	0x22, 0x12, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x22, 0x29, 0x0a, 0x0d, 0x53, 0x61, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x44, 0x0a, 0x08, 0x53, 0x43, 0x53, 0x54, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xb9, 0x03, 0x0a, 0x0b, 0x53, 0x43, 0x53, 0x54, 0x47, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x2b, 0x0a, 0x06, 0x41, 0x64, 0x64, 0x53, 0x56, 0x44, 0x12,
	0x0f, 0x2e, 0x73, 0x63, 0x73, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x56, 0x44, 0x52, 0x65, 0x71,
	0x1a, 0x0e, 0x2e, 0x73, 0x63, 0x73, 0x74, 0x2e, 0x53, 0x43, 0x53, 0x54, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x31, 0x0a, 0x09, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x56, 0x44, 0x12,
	0x12, 0x2e, 0x73, 0x63, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x56, 0x44,
	0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x73, 0x63, 0x73, 0x74, 0x2e, 0x53, 0x43, 0x53, 0x54, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x11, 0x2e, 0x73, 0x63, 0x73, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x73, 0x63, 0x73, 0x74, 0x2e, 0x53, 0x43, 0x53, 0x54,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x4c, 0x75, 0x6e,
	0x32, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x15, 0x2e, 0x73, 0x63, 0x73, 0x74, 0x2e, 0x41, 0x64,
	0x64, 0x4c, 0x75, 0x6e, 0x32, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e,
	0x73, 0x63, 0x73, 0x74, 0x2e, 0x53, 0x43, 0x53, 0x54, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x37, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x69, 0x32, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x15, 0x2e, 0x73, 0x63, 0x73, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x69, 0x32, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x73, 0x63, 0x73, 0x74, 0x2e, 0x53, 0x43,
	0x53, 0x54, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0c, 0x52, 0x65, 0x6d, 0x49,
	0x6e, 0x69, 0x32, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x15, 0x2e, 0x73, 0x63, 0x73, 0x74, 0x2e,
	0x52, 0x65, 0x6d, 0x49, 0x6e, 0x69, 0x32, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a,
	0x0e, 0x2e, 0x73, 0x63, 0x73, 0x74, 0x2e, 0x53, 0x43, 0x53, 0x54, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x39, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x16, 0x2e, 0x73, 0x63, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x73, 0x63, 0x73,
	0x74, 0x2e, 0x53, 0x43, 0x53, 0x54, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x0a,
	0x53, 0x61, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x13, 0x2e, 0x73, 0x63, 0x73,
	0x74, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x1a,
	0x0e, 0x2e, 0x73, 0x63, 0x73, 0x74, 0x2e, 0x53, 0x43, 0x53, 0x54, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x42, 0x24, 0x5a, 0x22, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x43, 0x56, 0x4e, 0x30, 0x30, 0x33, 0x2f, 0x73, 0x63, 0x73, 0x74, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2f, 0x73, 0x63, 0x73, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gateway_proto_rawDescOnce sync.Once
	file_gateway_proto_rawDescData = file_gateway_proto_rawDesc
)

func file_gateway_proto_rawDescGZIP() []byte {
	file_gateway_proto_rawDescOnce.Do(func() {
		file_gateway_proto_rawDescData = protoimpl.X.CompressGZIP(file_gateway_proto_rawDescData)
	})
	return file_gateway_proto_rawDescData
}

var file_gateway_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_gateway_proto_goTypes = []any{
	(*AddSVDReq)(nil),        // 0: scst.AddSVDReq
	(*RemoveSVDReq)(nil),     // 1: scst.RemoveSVDReq
	(*AddGroupReq)(nil),      // 2: scst.AddGroupReq
	(*AddLun2GroupReq)(nil),  // 3: scst.AddLun2GroupReq
	(*AddIni2GroupReq)(nil),  // 4: scst.AddIni2GroupReq
	(*RemIni2GroupReq)(nil),  // 5: scst.RemIni2GroupReq
	(*GetLiveConfigReq)(nil), // 6: scst.GetLiveConfigReq
	(*SaveConfigReq)(nil),    // 7: scst.SaveConfigReq
	(*SCSTResp)(nil),         // 8: scst.SCSTResp
}
var file_gateway_proto_depIdxs = []int32{
	0, // 0: scst.SCSTGateway.AddSVD:input_type -> scst.AddSVDReq
	1, // 1: scst.SCSTGateway.RemoveSVD:input_type -> scst.RemoveSVDReq
	2, // 2: scst.SCSTGateway.AddGroup:input_type -> scst.AddGroupReq
	3, // 3: scst.SCSTGateway.AddLun2Group:input_type -> scst.AddLun2GroupReq
	4, // 4: scst.SCSTGateway.AddIni2Group:input_type -> scst.AddIni2GroupReq
	5, // 5: scst.SCSTGateway.RemIni2Group:input_type -> scst.RemIni2GroupReq
	6, // 6: scst.SCSTGateway.GetLiveConfig:input_type -> scst.GetLiveConfigReq
	7, // 7: scst.SCSTGateway.SaveConfig:input_type -> scst.SaveConfigReq
	8, // 8: scst.SCSTGateway.AddSVD:output_type -> scst.SCSTResp
	8, // 9: scst.SCSTGateway.RemoveSVD:output_type -> scst.SCSTResp
	8, // 10: scst.SCSTGateway.AddGroup:output_type -> scst.SCSTResp
	8, // 11: scst.SCSTGateway.AddLun2Group:output_type -> scst.SCSTResp
	8, // 12: scst.SCSTGateway.AddIni2Group:output_type -> scst.SCSTResp
	8, // 13: scst.SCSTGateway.RemIni2Group:output_type -> scst.SCSTResp
	8, // 14: scst.SCSTGateway.GetLiveConfig:output_type -> scst.SCSTResp
	8, // 15: scst.SCSTGateway.SaveConfig:output_type -> scst.SCSTResp
	8, // [8:16] is the sub-list for method output_type
	0, // [0:8] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_gateway_proto_init() }
func file_gateway_proto_init() {
	if File_gateway_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gateway_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gateway_proto_goTypes,
		DependencyIndexes: file_gateway_proto_depIdxs,
		MessageInfos:      file_gateway_proto_msgTypes,
	}.Build()
	File_gateway_proto = out.File
	file_gateway_proto_rawDesc = nil
	file_gateway_proto_goTypes = nil
	file_gateway_proto_depIdxs = nil
}
